"""init databases

Revision ID: a45057cf56ef
Revises: 
Create Date: 2025-07-14 11:27:26.372505

"""
import uuid
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = 'a45057cf56ef'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

SYSTEM_ROLES = [
    {"code": 0, "name": "系统管理员", "description": "拥有系统所有权限"},
    {"code": 1, "name": "项目管理员", "description": "管理特定项目的所有资源"},
    {"code": 2, "name": "数据分析师", "description": "可访问和查询数据，生成报告"},
    {"code": 99, "name": "普通成员", "description": "项目基础成员权限"}
]


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role',
                    sa.Column('code', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=50), nullable=False),
                    sa.Column('description', sa.Text(), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.PrimaryKeyConstraint('code'),
                    sa.UniqueConstraint('code'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('user',
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('username', sa.String(length=50), nullable=False),
                    sa.Column('hashed_password', sa.String(length=128), nullable=False),
                    sa.Column('email', sa.String(length=100), nullable=False),
                    sa.Column('is_active', sa.Boolean(), nullable=True),
                    sa.Column('is_superuser', sa.Boolean(), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email'),
                    sa.UniqueConstraint('username')
                    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=True)
    op.create_table('project',
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('name', sa.String(length=100), nullable=False),
                    sa.Column('description', sa.Text(), nullable=True),
                    sa.Column('owner_id', sa.String(length=36), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_project_id'), 'project', ['id'], unique=True)
    op.create_table('user_role',
                    sa.Column('user_id', sa.String(length=36), nullable=False),
                    sa.Column('role_code', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['role_code'], ['role.code'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('user_id', 'role_code')
                    )
    op.create_table('agent',
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('project_id', sa.String(length=36), nullable=True),
                    sa.Column('name', sa.String(length=100), nullable=False),
                    sa.Column('type', sa.String(length=20), nullable=False),
                    sa.Column('config', sa.Text(), nullable=False),
                    sa.Column('created_by', sa.String(length=36), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
                    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_agent_id'), 'agent', ['id'], unique=True)
    op.create_table('conversation',
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('project_id', sa.String(length=36), nullable=True),
                    sa.Column('user_id', sa.String(length=36), nullable=True),
                    sa.Column('title', sa.String(length=200), nullable=False),
                    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_conversation_id'), 'conversation', ['id'], unique=True)
    op.create_table('data_source',
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('project_id', sa.String(length=36), nullable=True),
                    sa.Column('name', sa.String(length=100), nullable=False),
                    sa.Column('type', sa.String(length=20), nullable=False),
                    sa.Column('connection_config', sa.Text(), nullable=False),
                    sa.Column('created_by', sa.String(length=36), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
                    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_data_source_id'), 'data_source', ['id'], unique=True)
    op.create_table('dataset',
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('project_id', sa.String(length=36), nullable=True),
                    sa.Column('name', sa.String(length=100), nullable=False),
                    sa.Column('configuration', sa.Text(), nullable=False),
                    sa.Column('created_by', sa.String(length=36), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
                    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_dataset_id'), 'dataset', ['id'], unique=True)
    op.create_table('project_member',
                    sa.Column('project_id', sa.String(length=36), nullable=False),
                    sa.Column('user_id', sa.String(length=36), nullable=False),
                    sa.Column('role_code', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
                    sa.ForeignKeyConstraint(['role_code'], ['role.code'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('project_id', 'user_id')
                    )
    op.create_table('agent_version',
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('agent_id', sa.String(length=36), nullable=True),
                    sa.Column('version', sa.String(length=20), nullable=False),
                    sa.Column('config', sa.Text(), nullable=False),
                    sa.Column('checksum', sa.String(length=64), nullable=False),
                    sa.Column('created_by', sa.String(length=36), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.Column('is_current', sa.Boolean(), nullable=True),
                    sa.ForeignKeyConstraint(['agent_id'], ['agent.id'], ),
                    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_agent_version_id'), 'agent_version', ['id'], unique=True)
    op.create_table('dataset_data_source',
                    sa.Column('dataset_id', sa.String(length=36), nullable=False),
                    sa.Column('data_source_id', sa.String(length=36), nullable=False),
                    sa.Column('alias', sa.String(length=100), nullable=False),
                    sa.ForeignKeyConstraint(['data_source_id'], ['data_source.id'], ),
                    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], ),
                    sa.PrimaryKeyConstraint('dataset_id', 'data_source_id')
                    )
    op.create_table('message',
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('conversation_id', sa.String(length=36), nullable=True),
                    sa.Column('content', sa.Text(), nullable=False),
                    sa.Column('role', sa.String(length=10), nullable=False),
                    sa.Column('sql_query', sa.Text(), nullable=True),
                    sa.Column('report_data', sa.Text(), nullable=True),
                    sa.Column('feedback_type', sa.Integer(), nullable=True),
                    sa.Column('feedback_text', sa.Text(), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.ForeignKeyConstraint(['conversation_id'], ['conversation.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_message_id'), 'message', ['id'], unique=True)
    op.create_table('agent_metric',
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('agent_version_id', sa.String(length=36), nullable=True),
                    sa.Column('sql_gen_latency', sa.Float(), nullable=False),
                    sa.Column('query_success_rate', sa.Float(), nullable=False),
                    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.ForeignKeyConstraint(['agent_version_id'], ['agent_version.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_agent_metric_id'), 'agent_metric', ['id'], unique=True)

    # ### 批量初始化所有角色 ###
    conn = op.get_bind()

    # 角色初始化
    for role in SYSTEM_ROLES:
        conn.execute(sa.text(
            """
            INSERT INTO role (code, name, description)
            VALUES (:code, :name, :description)
            ON CONFLICT (code) DO UPDATE SET
                description = EXCLUDED.description
            """
        ), {
            'code': role["code"],
            'name': role["name"],
            'description': role["description"]
        })

    # ### 添加管理员用户###
    # 获取系统管理员角色ID
    admin_role = conn.execute(sa.text(
        "SELECT name FROM role WHERE code = 0"
    )).fetchone()

    if admin_role:
        admin_id = str(uuid.uuid4())
        password = "Pass1234"
        hashed_password = "$2b$12$tLTGgyI/NCqGz.TJVoW/CuCp/zhGeirMEcYK1uL45r9MHQe933qb."

        conn.execute(sa.text(
            """
            INSERT INTO "user" (id, username, hashed_password, email, is_active, is_superuser)
            VALUES (:id, :username, :password, :email, :is_active, :is_superuser)
            ON CONFLICT (username) DO NOTHING
            """
        ), {
            'id': admin_id,
            'username': 'admin',
            'password': hashed_password,
            'email': 'admin@example.com',
            'is_active': True,
            'is_superuser': True
        })

        # 分配管理员角色
        conn.execute(sa.text(
            """
            INSERT INTO user_role (user_id, role_code)
            VALUES (:user_id, :role_code)
            ON CONFLICT DO NOTHING
            """
        ), {
            'user_id': admin_id,
            'role_code': 0
        })
    # ### end 初始化管理员和角色 ###
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_agent_metric_id'), table_name='agent_metric')
    op.drop_table('agent_metric')
    op.drop_index(op.f('ix_message_id'), table_name='message')
    op.drop_table('message')
    op.drop_table('dataset_data_source')
    op.drop_index(op.f('ix_agent_version_id'), table_name='agent_version')
    op.drop_table('agent_version')
    op.drop_table('project_member')
    op.drop_index(op.f('ix_dataset_id'), table_name='dataset')
    op.drop_table('dataset')
    op.drop_index(op.f('ix_data_source_id'), table_name='data_source')
    op.drop_table('data_source')
    op.drop_index(op.f('ix_conversation_id'), table_name='conversation')
    op.drop_table('conversation')
    op.drop_index(op.f('ix_agent_id'), table_name='agent')
    op.drop_table('agent')
    op.drop_table('user_role')
    op.drop_index(op.f('ix_project_id'), table_name='project')
    op.drop_table('project')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_table('role')
    # ### end Alembic commands ###
